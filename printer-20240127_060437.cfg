# This file contains pin mappings for the stock 2020 Creality Ender 3
# V2. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

# mainsail config
[include mainsail.cfg]
[include klipper_expander.cfg]
# [include temp_monitor.cfg]

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[pause_resume]

[exclude_object]

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: -6.5
position_min: -6.5
position_max: 235
homing_speed: 70

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: -9.5
position_min: -9.5
position_max: 220
homing_speed: 70

[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PA7
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 250

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
rotation_distance: 4.55
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 270
min_extrude_temp: 0

[force_move]
enable_force_move: True

[bltouch]                             # enable for BLTouch - fast-mode
sensor_pin: ^PB1
control_pin: PB0
pin_up_touch_mode_reports_triggered: True
probe_with_touch_mode: True
x_offset: 36.5                        # modify as needed for bltouch location
y_offset: 9.5                         # modify as needed for bltouch location
#z_offset: 0.0                         # modify as needed for bltouch or run PROBE_CALIBRATE
speed: 40
samples: 3
sample_retract_dist: 3.0              # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
samples_tolerance_retries: 3
speed: 40
samples: 2

[screws_tilt_adjust]
screw1: -3,24.5
screw1_name: front left screw
screw2: 168,24.5
screw2_name: front right screw
screw3: 168,194.5
screw3_name: rear right screw
screw4: -3,194.5
screw4_name: rear left screw
horizontal_move_z: 10
speed: 200
screw_thread: CW-M4 
# Use CW for Clockwise and CCW for Counter Clockwise

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 32, 32
mesh_max: 203, 188
probe_count: 9,9
mesh_pps: 2, 2
algorithm: bicubic
fade_start: 1
fade_end: 10

[safe_z_home]                         # enable for BLTouch
home_xy_position: 81.5, 101.5
speed: 120
z_hop: 10
z_hop_speed: 10

[mcu host]
serial: /tmp/klipper_host_mcu

[mcu expander]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_33000800144330534E373720-if00
restart_method: command

[adxl345] #BTT PI
cs_pin: host:gpio67
spi_bus: spidev0.0
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 70
probe_points: 117.5,117.5,10

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan hotend_fan]
pin: expander:PA0
max_power: 1.0
fan_speed: 1
kick_start_time: 0
heater: extruder
heater_temp: 50.0

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

# [temperature_sensor BTTPI]
# sensor_type: temperature_host
# min_temp: 10
# max_temp: 100

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 20
max_temp: 100 

# [temperature_fan ElecBoxFan]
# pin: expander:PA1
# sensor_type: temperature_mcu
# sensor_mcu: mcu
# control: watermark
# min_temp: 10
# max_temp: 100
# target_temp: 45

[temperature_fan ElecBoxFan]
pin: expander:PA1
sensor_type: temperature_host
control: watermark
min_temp: 20
max_temp: 100
target_temp: 55

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2500
max_accel_to_decel: 99999
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

[gcode_macro PID_TUNE_HOTEND]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=205

[gcode_macro PID_TUNE_BED]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro CREATE_MESH]
description: Create bed mesh based on material
gcode:
  {% set MATERIAL = params.MATERIAL %}
  {% if MATERIAL|lower == 'pla' %} ; if material is pla or PLA
    M190 S60
    G28
    BED_MESH_PROFILE REMOVE=PLA
    BED_MESH_CALIBRATE PROFILE=PLA
  {% elif MATERIAL|lower == 'petg' %} ; if material is petg or PETG
    M190 S80
    G28
    BED_MESH_PROFILE REMOVE=PETG
    BED_MESH_CALIBRATE PROFILE=PETG
  {% elif MATERIAL|lower == 'abs' %} ; if material is abs or ABS
    M190 S100
    G28
    BED_MESH_PROFILE REMOVE=ABS
    BED_MESH_CALIBRATE PROFILE=ABS
  {% endif %}

[gcode_macro BED_TRAMMING]
gcode:
  G28
  SCREWS_TILT_CALCULATE

[gcode_macro SET_MATERIAL]
description: Set values based on material type
variable_material: ''
gcode:
  {% set MATERIAL = params.MATERIAL|default('PLA')|string %} ; Get material type from slicer
  # SET_GCODE_VARIABLE MACRO=SET_MATERIAL VARIABLE=material VALUE='"{MATERIAL}'" ; Save the material type to a variable just because
  {% if MATERIAL == 'PLA' %} ; If material type is PLA
    RESPOND TYPE=command MSG='Printing in PLA'
    BED_MESH_PROFILE LOAD=PLA
    SET_PRESSURE_ADVANCE ADVANCE=0.052
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  {% elif MATERIAL == 'PET' %} ; If material type is PETG
    RESPOND TYPE=command MSG='Printing in PETG'
    BED_MESH_PROFILE LOAD=PETG
    SET_PRESSURE_ADVANCE ADVANCE=0.074
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=80
  {% elif MATERIAL == 'ABS' %} ; If material type is ABS
    RESPOND TYPE=command MSG='Printing in ABS'
    BED_MESH_PROFILE LOAD=ABS
    SET_PRESSURE_ADVANCE ADVANCE=0.02
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
  {% endif %}

[gcode_macro START_PRINT]
gcode:
  # Start bed heating
  M140 S{params.BED_TEMP}
  G28; Home the hotend
  # Heat nozzle to a low temp
  M104 S180
  # Use absolute coordinates
  G90
  G1 X0.1 Y20 Z30 F5000.0 ; Move to start position
  # Wait for final bed temp
  M190 S{params.BED_TEMP}

  G28 Z ; Home all axis
  G1 X1 Y20 F5000.0 ; Move to start position
  # Set and wait for nozzle to reach temperature
  M109 S{params.EXTRUDER_TEMP}
  G92 E0 ; Reset Extruder
  G1 Z0.3 ; Start close to bed
  G1 X2 Y150.0 Z0.3 F1500.0 E15 ; Draw the first line
  G1 X2.3 Y150.0 Z0.3 F5000.0 ; Move to side a little
  G1 X2.3 Y20 Z0.3 F1500.0 E25 ; Draw the second line
  G92 E0 ; Reset Extruder
  G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed

[gcode_macro END_PRINT]
gcode:
  {% set PRINT_BED_MAX = params.PRINT_BED_MAX|float %}
  {% set MAX_LAYER_Z = params.MAX_LAYER_Z|float %}
  {% set MAX_PRINT_HEIGHT = params.MAX_PRINT_HEIGHT|float %}
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0

  {% if MAX_LAYER_Z < MAX_PRINT_HEIGHT-10 %}
    G91
    G1 Z10 F600 ; Move print head further up{endif}
    G90
  {% endif %}
  G1 X5 Y220 F6000 ; present print

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  # Turn off bed, extruder, and fan
  M140 S0
  M104 S0
  M106 S0

  G91
  G1 Z10 F600 ; Move print head further up{endif}
  G90
  G1 X5 Y220 F6000 ; present print
  CANCEL_PRINT_BASE

[idle_timeout]
timeout = 1200 #20 Minutes
gcode:
  {% if printer.pause_resume.is_paused %}

  M117 "Timeout ignored because printer state == paused."

  {% else %}
  TURN_OFF_MOTORS
  TURN_OFF_HEATERS
  M106 S0
  M117 ;clear M117 messages
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 16.669
#*# pid_ki = 0.614
#*# pid_kd = 113.142
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.138
#*# pid_ki = 1.080
#*# pid_kd = 1138.859
#*#
#*# [bltouch]
#*# z_offset = 2.710
#*#
#*# [input_shaper]
#*# shaper_freq_x = 49.8
#*# shaper_type_x = ei
#*# shaper_freq_y = 48.8
#*# shaper_type_y = ei
#*#
#*# [bed_mesh ABS]
#*# version = 1
#*# points =
#*# 	-0.161250, -0.157500, -0.161250, -0.172500, -0.177500, -0.178750, -0.176250, -0.177500, -0.205000
#*# 	-0.060000, -0.045000, -0.061250, -0.061250, -0.065000, -0.072500, -0.050000, -0.077500, -0.052500
#*# 	0.018750, 0.007500, -0.031250, -0.040000, -0.048750, -0.073750, -0.081250, -0.077500, -0.113750
#*# 	0.018750, 0.023750, 0.016250, -0.027500, -0.005000, -0.002500, 0.011250, 0.020000, 0.011250
#*# 	0.033750, 0.051250, 0.030000, 0.031250, 0.026250, 0.041250, 0.048750, 0.040000, 0.053750
#*# 	0.035000, 0.051250, 0.027500, -0.002500, -0.003750, 0.005000, 0.000000, 0.038750, 0.052500
#*# 	-0.003750, 0.000000, -0.001250, -0.007500, -0.043750, -0.015000, -0.043750, -0.015000, -0.023750
#*# 	-0.058750, -0.038750, -0.043750, -0.071250, -0.077500, -0.083750, -0.036250, -0.031250, -0.056250
#*# 	-0.097500, -0.122500, -0.117500, -0.118750, -0.117500, -0.127500, -0.090000, -0.082500, -0.083750
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 202.96
#*# min_y = 32.0
#*# max_y = 188.0
#*#
#*# [bed_mesh PLA]
#*# version = 1
#*# points =
#*# 	-0.033750, 0.022500, -0.001250, -0.048750, -0.031250, -0.051250, -0.033750, -0.022500, -0.081250
#*# 	0.047500, 0.015000, -0.001250, -0.033750, -0.042500, -0.050000, -0.050000, -0.041250, -0.081250
#*# 	0.055000, 0.055000, 0.030000, -0.006250, 0.031250, 0.017500, 0.037500, 0.012500, 0.011250
#*# 	0.050000, 0.026250, -0.026250, -0.031250, 0.003750, 0.012500, 0.007500, 0.023750, 0.010000
#*# 	0.047500, 0.038750, 0.053750, 0.033750, 0.053750, 0.036250, 0.017500, -0.001250, 0.030000
#*# 	0.015000, 0.020000, -0.028750, 0.021250, 0.023750, 0.022500, 0.005000, 0.027500, 0.031250
#*# 	0.020000, 0.040000, -0.010000, -0.018750, -0.011250, -0.010000, -0.028750, -0.008750, -0.022500
#*# 	-0.047500, -0.050000, -0.067500, -0.058750, -0.051250, -0.065000, -0.025000, 0.005000, -0.020000
#*# 	-0.063750, -0.072500, -0.063750, -0.057500, -0.076250, -0.061250, -0.023750, 0.005000, -0.010000
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 202.96
#*# min_y = 32.0
#*# max_y = 188.0
#*#
#*# [bed_mesh PETG]
#*# version = 1
#*# points =
#*# 	-0.107500, -0.061250, -0.050000, -0.091250, -0.085000, -0.085000, -0.071250, -0.045000, -0.117500
#*# 	-0.023750, -0.057500, -0.056250, -0.102500, -0.081250, -0.085000, -0.062500, -0.056250, -0.097500
#*# 	-0.016250, -0.008750, -0.041250, -0.048750, -0.006250, -0.022500, 0.006250, -0.007500, -0.008750
#*# 	-0.006250, -0.022500, -0.061250, -0.057500, -0.027500, -0.016250, -0.021250, -0.000000, -0.030000
#*# 	-0.015000, -0.033750, -0.015000, -0.022500, -0.000000, 0.013750, 0.006250, -0.007500, 0.006250
#*# 	-0.047500, -0.027500, -0.046250, -0.037500, -0.011250, -0.008750, -0.043750, -0.020000, -0.003750
#*# 	-0.053750, -0.035000, -0.053750, -0.060000, -0.027500, -0.031250, -0.018750, -0.008750, -0.005000
#*# 	-0.102500, -0.077500, -0.083750, -0.091250, -0.046250, -0.067500, -0.013750, 0.012500, -0.003750
#*# 	-0.105000, -0.107500, -0.080000, -0.077500, -0.110000, -0.078750, -0.038750, -0.021250, -0.013750
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 32.0
#*# max_x = 202.96
#*# min_y = 32.0
#*# max_y = 188.0
